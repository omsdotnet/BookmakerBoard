name: SonarCloud
on:
  workflow_dispatch:
  push:
    branches: [master]
    paths-ignore:
      - "design/**"
      - "promo/**"
      - "docs/**"
      - "**/*.md"
  pull_request:
    branches: [master]
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: "BookmakerBoard.sln"
    steps:

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Setup .NET 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      - name: Setup .NET 6.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: "src/BookmakerBoard/ClientApp/package-lock.json"

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p -v ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Begin SonarCloud scanner
        env:
          SONAR_DOTNET_ENABLE_CONCURRENT_EXECUTION: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_PROJECT_KEY: "omsdotnet.bookmaker"
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin \
              /k:$SONAR_PROJECT_KEY \
              /o:${{ secrets.SONAR_ORGANIZATION }} \
              /v:$GITVERSION_SEMVER \
              /n:$PROJECT_NAME \
              /d:sonar.login=$SONAR_TOKEN \
              /d:sonar.host.url=$SONAR_HOST_URL \
              /d:sonar.cs.nunit.reportsPaths="**/TestResult/TestResults*.xml" \
              /d:sonar.cs.opencover.reportsPaths="**/TestResult/coverage.opencover.xml" \
              /d:sonar.projectDescription="Система учета ставок для хакатонов .NET сообщества. Управляет системой только букмекер, остальные только могут смотреть результаты заездов и ставок." \
              /d:sonar.links.homepage="https://github.com/omsdotnet/BookmakerBoard/wiki" \
              /d:sonar.links.ci="https://github.com/omsdotnet/BookmakerBoard/actions" \
              /d:sonar.links.issue="https://github.com/omsdotnet/BookmakerBoard/issues" \
              /d:sonar.links.scm="https://github.com/omsdotnet/BookmakerBoard.git"

      - run: dotnet restore

      - name: dotnet build
        run: |
          dotnet build $PROJECT_NAME \
            -c Release \
            --no-restore \
            --nologo \
            /p:Company="OmsDotNet Community" \
            /p:Product="BookmakerBoard" \
            /p:AssemblyVersion=$GITVERSION_ASSEMBLYSEMVER \
            /p:FileVersion=$GITVERSION_ASSEMBLYSEMFILEVER \
            /p:InformationalVersion=$GITVERSION_INFORMATIONALVERSION

      - name: dotnet test
        run: |
          dotnet test $PROJECT_NAME \
            -c Release \
            -r '${{ github.workspace }}/reports' \
            --no-build \
            --nologo \
            --no-restore \
            --logger "nunit;LogFilePath=TestResult-{assembly}.xml" \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=\"opencover\" \
            /p:CoverletOutput=TestResult/

      - run: npm ci
        working-directory: "src/BookmakerBoard/ClientApp"

      - run: npm run build --if-present
        working-directory: "src/BookmakerBoard/ClientApp"

      - name: End sonarscanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login=$SONAR_TOKEN
